{"version":3,"sources":["components/nav/Nav.jsx","components/nav/index.js","components/labelled-input/LabelledInput.jsx","components/labelled-input/index.js","components/labelled-date-input/index.js","components/labelled-date-input/LabelledDateInput.jsx","components/customer-data/CustomerData.jsx","components/customer-data/index.js","components/product/index.js","components/product/Product.jsx","components/app/App.jsx","components/app/index.js","serviceWorker.js","index.jsx"],"names":["Nav","react_default","a","createElement","className","id","type","href","LabelledInput","_ref","inputClassName","defaultValue","renderInput","label","labelClassName","onChange","invalid","centered","other","Object","objectWithoutProperties","labelClasses","classNames","labelled-input__label--centered","inputClasses","labelled-input__input--invalid","assign","e","target","value","defaultProps","LabelledDateInput","props","labelled_input","DateTime_default","timeFormat","moment","inputProps","locale","CustomerData","labelled_date_input","cols","rows","Product","data-product-type-id","disabled","required","App","Fragment","nav","product","customer_data","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.703b7345.chunk.js","sourcesContent":["import React from 'react'\nimport './Nav.css'\nimport '../../assets/fontello/css/fontello.css'\n\nfunction Nav() {\n  return (\n    <nav className=\"nav\" id=\"nav\">\n      <button type=\"button\" id=\"menu-toggle\">\n        <i className=\"icon-menu\" />\n      </button>\n      <ul className=\"menu\">\n        <li>\n          <a href=\"/add_order\">Добавить заказ</a>\n        </li>\n        <li>\n          <a href=\"/admin/app/\">Админка</a>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Nav\n","import Nav from './Nav'\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport './LabelledInput.css'\n\nconst LabelledInput = ({\n  inputClassName,\n  type,\n  defaultValue,\n  renderInput,\n  label,\n  labelClassName,\n  onChange,\n  invalid,\n  centered,\n  ...other\n}) => {\n  const labelClasses = classNames(\n    'labelled-input__label',\n    {\n      'labelled-input__label--centered': centered,\n    },\n    labelClassName\n  )\n  const inputClasses = classNames('labelled-input__input', inputClassName, {\n    'labelled-input__input--invalid': invalid,\n  })\n  return (\n    <label className={labelClasses}>\n      {label}{' '}\n      {renderInput ? (\n        renderInput()\n      ) : (\n        <input\n          type={type}\n          defaultValue={defaultValue}\n          className={inputClasses}\n          onChange={(e) => onChange(e.target.value)}\n          {...other}\n        />\n      )}\n    </label>\n  )\n}\n\nLabelledInput.propTypes = {\n  label: PropTypes.node.isRequired,\n  labelClassName: PropTypes.string,\n  inputClassName: PropTypes.string,\n  type: PropTypes.string,\n  defaultValue: PropTypes.string,\n  renderInput: PropTypes.func,\n  onChange: PropTypes.func,\n  invalid: PropTypes.bool,\n  centered: PropTypes.bool,\n}\n\nLabelledInput.defaultProps = {\n  type: 'text',\n  labelClassName: '',\n  inputClassName: '',\n  defaultValue: '',\n  renderInput: null,\n  onChange: () => {},\n  invalid: false,\n  centered: false,\n}\n\nexport default LabelledInput\n","import LabelledInput from './LabelledInput'\n\nexport default LabelledInput\n","import LabelledDateInput from './LabelledDateInput'\n\nexport default LabelledDateInput\n","import React from 'react'\nimport DateTime from 'react-datetime'\nimport 'react-datetime/css/react-datetime.css'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport './LabelledDateInput.css'\nimport LabelledInput from '../labelled-input'\n\nconst LabelledDateInput = (props) => (\n  <LabelledInput\n    labelClassName=\"labelled-date-input__label\"\n    renderInput={() => (\n      <DateTime\n        timeFormat={false}\n        defaultValue={moment()}\n        inputProps={{ className: 'labelled-date-input__input' }}\n        locale=\"ru\"\n      />\n    )}\n    {...props}\n  />\n)\n\nexport default LabelledDateInput\n","import React from 'react'\nimport './CustomerData.css'\nimport LabelledInput from '../labelled-input'\nimport LabelledDateInput from '../labelled-date-input'\n\nfunction CustomerData() {\n  return (\n    <div className=\"customer-data\">\n      <LabelledDateInput label=\"Дата заказа\" />\n      <LabelledDateInput label=\"Дата доставки\" />\n      <LabelledInput label=\"Время доставки\" />\n      <LabelledInput label=\"Телефон\" />\n      <LabelledInput label=\"Доп. телефон\" />\n      <LabelledInput label=\"Индекс\" type=\"number\" />\n      <LabelledInput label=\"Область\" />\n      <LabelledInput label=\"Город\" />\n      <LabelledInput\n        label=\"Тип улицы\"\n        renderInput={() => (\n          <select>\n            <option value=\"ул\">улица</option>\n            <option value=\"пер\">переулок</option>\n            <option value=\"пр\">проезд</option>\n            <option value=\"бул\">бульвар</option>\n            <option value=\"пл\">площадь</option>\n            <option value=\"тр\">тракт</option>\n            <option value=\"шс\">шоссе</option>\n          </select>\n        )}\n      />\n      <LabelledInput label=\"Улица\" />\n      <LabelledInput label=\"Дом\" />\n      <LabelledInput label=\"Корпус\" />\n      <LabelledInput label=\"Квартира\" type=\"number\" />\n      <LabelledInput label=\"Этаж\" type=\"number\" />\n      <LabelledInput label=\"Подъезд\" type=\"number\" />\n      <LabelledInput\n        label=\"Комментарий\"\n        renderInput={() => (\n          <textarea\n            id=\"order-comment-area\"\n            cols=\"30\"\n            rows=\"3\"\n            className=\"comment-area\"\n          />\n        )}\n      />\n    </div>\n  )\n}\n\nexport default CustomerData\n","import CustomerData from './CustomerData'\n\nexport default CustomerData\n","import Product from './Product'\n\nexport default Product\n","import React from 'react'\nimport './Product.css'\nimport LabelledInput from '../labelled-input'\nimport '../../assets/fontello/css/fontello.css'\n\nexport default function Product() {\n  return (\n    <section className=\"product\" data-product-type-id=\"0\">\n      <div className=\"product__close-wrapper\">\n        <i className=\"icon-close product__close\" />\n      </div>\n      <LabelledInput\n        label=\"Имя товара\"\n        inputClassName=\"name-input\"\n        disabled\n        centered\n      />\n      <span className=\"product__type\">Тип товара</span>\n      <section className=\"product__buttons-wrapper\">\n        <button\n          type=\"button\"\n          className=\"button product__choose-type-button\"\n          value=\"1\"\n        >\n          одеяло\n        </button>\n        <button\n          type=\"button\"\n          className=\"button product__choose-type-button\"\n          value=\"2\"\n        >\n          подушка\n        </button>\n        <button\n          type=\"button\"\n          className=\"button product__choose-type-button\"\n          value=\"3\"\n        >\n          постельное белье\n        </button>\n        <button\n          type=\"button\"\n          className=\"button product__choose-type-button\"\n          value=\"4\"\n        >\n          простыня на резинке\n        </button>\n        <button\n          type=\"button\"\n          className=\"button product__choose-type-button\"\n          value=\"5\"\n        >\n          наматрасник\n        </button>\n        <button\n          type=\"button\"\n          className=\"button product__choose-type-button\"\n          value=\"6\"\n        >\n          плед\n        </button>\n        <button\n          type=\"button\"\n          className=\"button product__choose-type-button\"\n          value=\"7\"\n        >\n          полотенце\n        </button>\n      </section>\n      <div className=\"product__inputs\">\n        <LabelledInput\n          label=\"Закупочная цена товара\"\n          inputClassName=\"purchase-price-input\"\n          required\n          centered\n        />\n        <LabelledInput\n          label=\"Цена товара\"\n          inputClassName=\"price-input\"\n          required\n          centered\n        />\n        <LabelledInput\n          label=\"Количество товаров\"\n          inputClassName=\"number-input\"\n          defaultValue=\"1\"\n          type=\"number\"\n          centered\n        />\n      </div>\n      <LabelledInput\n        label=\"Комментарий\"\n        renderInput={() => (\n          <textarea\n            id=\"comment-area-1\"\n            cols=\"30\"\n            rows=\"3\"\n            className=\"comment-area\"\n          />\n        )}\n        centered\n      />\n    </section>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport Nav from '../nav'\nimport CustomerData from '../customer-data'\nimport Product from '../product'\nimport LabelledInput from '../labelled-input'\n\nfunction App() {\n  return (\n    <>\n      <Nav />\n      <div className=\"container\">\n        <h1 className=\"order-id-wrapper\">\n          <LabelledInput\n            label=\"Добавить заказ №\"\n            type=\"number\"\n            inputClassName=\"order-id-input\"\n            centered\n          />\n        </h1>\n        <main>\n          <section className=\"main-content-wrapper\">\n            <div className=\"products\">\n              <Product />\n            </div>\n            <button\n              type=\"button\"\n              id=\"add-product\"\n              className=\"button btn-add-product\"\n            >\n              +\n            </button>\n            <button\n              type=\"button\"\n              id=\"save-order\"\n              className=\"button btn-save-order\"\n            >\n              Сохранить заказ\n            </button>\n          </section>\n          <aside>\n            <CustomerData />\n          </aside>\n        </main>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import App from './App'\n\nexport default App\n","/* eslint-disable no-param-reassign,no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost.\n        // Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}